三范式？
第一范式
每一列属性都是不可再分的属性值，确保每一列的原子性。数据库表中的字段都是单一属性的， 不可再分。
第二范式
第二范式（ 2NF） 是在第一范式（ 1NF） 的基础上建立起来的， 即满足第二范式（ 2NF） 必须先满足第一范式（ 1NF）
要求数据库表中的每个实例或行必须可以被惟一地区分。
第三范式的要求如下：
满足第三范式（ 3NF） 必须先满足第二范式（ 2NF）。 简而言之， 第三范式（ 3NF） 要求一个数据库表中不包含已在其它表中已包含的非主关键字信息。
所以第三范式具有如下特征：
1， 每一列只有一个值
2， 每一行都能区分。
3， 每一个表都不包含其他表已经包含的非主关键字信息。
浅谈 DML、DDL、DCL的区别?
https://www.cnblogs.com/feng0815/p/8510236.html
DML（data manipulation language）数据操纵语言：对象是数据，影响的是数据行数
　　　　就是我们最经常用到的 UPDATE、INSERT、DELETE。 主要用来对数据库的数据进行一些操作。
DDL（data definition language）数据库定义语言：对象是表和数据库
　　　　其实就是我们在创建表的时候用到的一些sql，比如说：CREATE、ALTER、DROP等。DDL主要是用在定义或改变表的结构，数据类型，表之间的链接和约束等初始化工作上
DCL（Data Control Language）数据库控制语言：对象是用户
　　　　是用来设置或更改数据库用户或角色权限的语句，包括（grant,deny,revoke等）语句。这个比较少用到。

触发器的使用？
http://www.mamicode.com/info-detail-1825561.html

Linux命令
ls 會列舉出當前工作目錄的內容（文件或文件夾）
pwd 以绝对路径的方式显示用户当前工作目录
sed Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。
find find命令用来在指定目录下查找文件
touch 一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件。
cat 连接文件并打印到标准输出设备上，cat经常用来显示文件的内容
awk awk是一种编程语言，用于在linux/unix下对文本和数据进行处理
chown 改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组
chmod 用来变更文件或目录的权限
ntpdate 是用来设置本地日期和时间

表分区


select * from  (select id,name,dept,salary, row_number() over (partition by dept order by salary desc) rank  from empt) aa where rank=1


select a.*
  from (select t1.*,
               (select count(*) + 1
                  from empt
                 where dept=t1.dept and
                   salary > t1.salary  ) as group_id
          from empt t1 ) a
 where a.group_id >=2

CREATE TABLE [dbo].[empt] (
  [id] int  NOT NULL,
  [name] varchar(100) COLLATE Chinese_PRC_CI_AS  NULL,
  [dept] varchar(50) COLLATE Chinese_PRC_CI_AS  NULL,
  [salary] money  NULL
)

INSERT INTO []([id], [name], [dept], [salary]) VALUES (1, '张三', '技术一部', 3500.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (2, '李四', '技术二部', 7500.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (3, '王五', '技术一部', 5500.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (4, '小强', '技术一部', 10900.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (5, '大强', '技术二部', 9000.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (6, '赵六', '技术三部', 4000.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (7, '钱琪', '技术二部', 5000.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (8, '孙八', '技术三部', 6000.0000);
INSERT INTO []([id], [name], [dept], [salary]) VALUES (9, '小明', '技术三部', 3800.0000);

如何保证数据的完整性和一致性
https://blog.csdn.net/luke_wang/article/details/53240215
